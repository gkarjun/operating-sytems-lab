#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_FILES_PER_DIRECTORY 100
#define MAX_NAME_LENGTH 50
#define MAX_DIRECTORIES 100

typedef struct {
    char filename[MAX_NAME_LENGTH];
} File;

typedef struct {
    char dirname[MAX_NAME_LENGTH];
    File files[MAX_FILES_PER_DIRECTORY];
    int num_files;
} Directory;

Directory directories[MAX_DIRECTORIES];
int num_directories = 0;

void createDirectory(char dirname[]) {
    if (num_directories >= MAX_DIRECTORIES) {
        printf("Cannot create more directories. Limit reached.\n");
        return;
    }
    strcpy(directories[num_directories].dirname, dirname);
    directories[num_directories].num_files = 0;
    num_directories++;
    printf("Directory '%s' created successfully.\n", dirname);
}

void createFile(char dirname[], char filename[]) {
    for (int i = 0; i < num_directories; i++) {
        if (strcmp(directories[i].dirname, dirname) == 0) {
            if (directories[i].num_files >= MAX_FILES_PER_DIRECTORY) {
                printf("Cannot create more files in directory '%s'. Limit reached.\n", dirname);
                return;
            }
            if (strlen(filename) >= MAX_NAME_LENGTH) {
                printf("Filename is too long.\n");
                return;
            }
            strcpy(directories[i].files[directories[i].num_files].filename, filename);
            directories[i].num_files++;
            printf("File '%s' created successfully in directory '%s'.\n", filename, dirname);
            return;
        }
    }
    printf("Directory '%s' not found.\n", dirname);
}

void deleteFile(char dirname[], char filename[]) {
    for (int i = 0; i < num_directories; i++) {
        if (strcmp(directories[i].dirname, dirname) == 0) {
            for (int j = 0; j < directories[i].num_files; j++) {
                if (strcmp(directories[i].files[j].filename, filename) == 0) {
                    // Shift remaining files to fill the gap
                    for (int k = j; k < directories[i].num_files - 1; k++) {
                        strcpy(directories[i].files[k].filename, directories[i].files[k + 1].filename);
                    }
                    directories[i].num_files--;
                    printf("File '%s' deleted successfully from directory '%s'.\n", filename, dirname);
                    return;
                }
            }
            printf("File '%s' not found in directory '%s'.\n", filename, dirname);
            return;
        }
    }
    printf("Directory '%s' not found.\n", dirname);
}

void displayFiles(char dirname[]) {
    for (int i = 0; i < num_directories; i++) {
        if (strcmp(directories[i].dirname, dirname) == 0) {
            if (directories[i].num_files == 0) {
                printf("Directory '%s' is empty.\n", dirname);
                return;
            }
            printf("Files in directory '%s':\n", dirname);
            for (int j = 0; j < directories[i].num_files; j++) {
                printf("%s\n", directories[i].files[j].filename);
            }
            return;
        }
    }
    printf("Directory '%s' not found.\n", dirname);
}

int main() {
    int choice;
    char dirname[MAX_NAME_LENGTH];
    char filename[MAX_NAME_LENGTH];

    while (1) {
        printf("\n1. Create Directory\n2. Create File\n3. Delete File\n4. Display Files\n5. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter directory name to create: ");
                scanf("%s", dirname);
                createDirectory(dirname);
                break;
            case 2:
                printf("Enter directory name to create file in: ");
                scanf("%s", dirname);
                printf("Enter filename to create: ");
                scanf("%s", filename);
                createFile(dirname, filename);
                break;
            case 3:
                printf("Enter directory name to delete file from: ");
                scanf("%s", dirname);
                printf("Enter filename to delete: ");
                scanf("%s", filename);
                deleteFile(dirname, filename);
                break;
            case 4:
                printf("Enter directory name to display files: ");
                scanf("%s", dirname);
                displayFiles(dirname);
                break;
            case 5:
                printf("Exiting...\n");
                exit(0);
            default:
                printf("Invalid choice. Please try again.\n");
        }
    }

    return 0;
}
